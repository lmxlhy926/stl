//
// Created by 78472 on 2023/1/12.
//

/*
 *  单一职责：
 *      一个类只负责一项职责。
 *      问题由来
 *          类T负责2个不同的职责：职责p1, 职责p2。当由于职责p1需求发生改变而需要修改T时，
 *          有可能会导致原本运行正常的职责p2功能发生故障。
 *
 *  开放封闭原则
 *      对扩展开放，对修改封闭
 *      问题由来：
 *          在软件生命周期内，因为变化、升级和维护等原因需要对软件原有代码进行修改时，
 *          可能会给旧代码引入错误，也可能会使我们不得不对整个功能进行重构，并且需要原有代码经过重新测试。
 *      解决方案：
 *          当软件需要变化时，尽量通过扩展软件实体的行为来实现变化，而不是通过修改已有的代码来实现变化。
 *
 *  依赖倒置原则
 *      高层模块不应该依赖底层模块，二者都应该依赖其抽象；抽象不应该依赖细节，细节应该依赖抽象。
 *
 *
 *
 *
 *
 *
 */



int main(int argc, char* argv[]){



    return 0;
}





















