#include<iostream>
using namesapce std;

/*
存储类定义了程序中变量/函数的作用域范围和生命周期

*static:
	修饰局部变量：
		指示编译器在程序的生命周期内保持局部变量的存在
		不需要在每次进入和离开作用域时进行创建和销毁
		因此，使用static修饰的局部变量可以在函数调用之间保持局部变量的值
	修饰全局变量：
		会使变量的作用域限制在声明它的文件内
*extern
	多文件中引用全局变量或者函数：
		当有两个或多个文件共享相同的全局变量或函数的时候，在其中一个文件中定义变量或者函数，
		在其它文件中用extern来进行声明从而可以引用该变量或者函数。
		
*mutable
	仅适用于类的对象
	
*thread_local
	仅应用于变量声明和定义，不能用于函数的声明和定义。
	使用thread_local声明的变量仅可在它在其上创建的线程上访问。
	变量在创建线程时创建，并在销毁线程时销毁。每个线程都有其自己的变量副本。

*/

int main(void)
{



	return 0;
}







































